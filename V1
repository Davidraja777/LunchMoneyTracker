import PySimpleGUI as sg
import json
import os
from datetime import datetime

# Constants
FILENAME = f"{datetime.now().strftime('%B_%Y')}.json"

# Check if file exists, if not create one
if not os.path.exists(FILENAME):
    data = {
        "Ho": {},
        "Sing Ying": {},
        "Sekher": {}
    }
    with open(FILENAME, 'w') as file:
        json.dump(data, file)

# Load data from file
with open(FILENAME, 'r') as file:
    data = json.load(file)

def save_data():
    with open(FILENAME, 'w') as file:
        json.dump(data, file)

def main_window():
    # Create calendar layout
    days = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat']
    calendar_layout = [[sg.Text(day, size=(5,1)) for day in days]]

    for _ in range(5):  # 5 weeks
        row = []
        for _ in range(7):  # 7 days
            row.append(sg.Button('', size=(5,1), key=f'Day_{len(row)+1+len(calendar_layout[1])*len(calendar_layout)}', button_color=('black', 'white')))
        calendar_layout.append(row)

    layout = [
        [sg.Column(calendar_layout)],
        [sg.Text('Select a day from the calendar to add or deduct money.')],
        [sg.Text('Name:'), sg.Combo(['Ho', 'Sing Ying', 'Sekher'], key='Name')],
        [sg.Text('Amount:'), sg.InputText('', key='Amount')],
        [sg.Radio('Add', "RADIO1", default=True, key='Add'), sg.Radio('Deduct', "RADIO1", key='Deduct')],
        [sg.Button('Submit'), sg.Button('Exit')]
    ]

    window = sg.Window('Lunch Money Tracker', layout)

    # Update calendar with data
    for name in data:
        for date, amount in data[name].items():
            day_button = f'Day_{int(date.split("-")[-1])}'
            if day_button in window.keys():
                current_text = window[day_button].get_text()
                new_text = f"{current_text}\n{name}: {'+' if amount > 0 else ''}{amount}"
                color = 'green' if amount > 0 else 'red'
                window[day_button].update(new_text, button_color=('black', color))

    while True:
        event, values = window.read()

        if event == sg.WIN_CLOSED or event == 'Exit':
            break
        elif 'Day_' in event:
            window['Name'].set_focus()
        elif event == 'Submit':
            name = values['Name']
            date = datetime.now().strftime('%Y-%m-%d')
            day = int(date.split("-")[-1])
            amount = float(values['Amount']) if values['Add'] else -float(values['Amount'])
            if date not in data[name]:
                data[name][date] = 0
            data[name][date] += amount
            save_data()
            day_button = f'Day_{day}'
            current_text = window[day_button].get_text()
            new_text = f"{current_text}\n{name}: {'+' if amount > 0 else ''}{amount}"
            color = 'green' if amount > 0 else 'red'
            window[day_button].update(new_text, button_color=('black', color))

    window.close()

main_window()
